play {

  http {
    context = "/api/stone-paper"

    secret.key = "rI2>?Qvlnv6G/ad:Z[xeZWug/@Sj`hNTRo@XjJ6viymq0ziJxbq2tU_<9`x^txP"

    # Session configuration
    session {

      # The cookie name
      cookieName = "PLAY_SESSION"

      # Whether the secure attribute of the cookie should be set to true
      secure = false

      # The max age to set on the cookie.
      # If null, the cookie expires when the user closes their browser.
      # An important thing to note, this only sets when the browser will discard the cookie.
      maxAge = null

      # Whether the HTTP only attribute of the cookie should be set to true
      httpOnly = true

      # The value of the SameSite attribute of the cookie. Set to null for no SameSite attribute.
      sameSite = "lax"

      # The accounting.domain to set on the session cookie
      # If null, does not set a accounting.domain on the session cookie.
      domain = null

      # The session path
      # Must start with /.
      path = ${play.http.context}

      jwt {
        # The JWT signature algorithm to use on the session cookie
        # uses 'alg' https://tools.ietf.org/html/rfc7515#section-4.1.1
        signatureAlgorithm = "HS256"

        # The time after which the session is automatically invalidated.
        # Use 'exp' https://tools.ietf.org/html/rfc7519#section-4.1.4
        expiresAfter = ${play.http.session.maxAge}

        # The amount of clock skew to accept between servers when performing date checks
        # If you have NTP or roughtime synchronizing between servers, you can enhance
        # security by tightening this value.
        clockSkew = 5 minutes

        # The claim key under which all user data is stored in the JWT.
        dataClaim = "data"
      }
    }

    requestHandler = "play.api.http.DefaultHttpRequestHandler"
    #requestHandler = "accounting.infrastructure.module.RequestHandler"

    errorHandler = "play.api.http.DefaultHttpErrorHandler"
    #errorHandler = "accounting.infrastructure.module.ErrorHandler"
  }

  modules {
    enabled += "play.filters.cors.CORSModule"
    enabled += "infrastructure.module.BinderModule"
    #enabled += "accounting.infrastructure.module.CacheModule"
  }

  filters {
    disabled += "play.filters.csrf.CSRFFilter"

    headers.contentSecurityPolicy = null

    hosts {
      allowed = ["."]
    }

    ## CORS filter configuration
    # https://www.playframework.com/documentation/latest/CorsFilter
    # ~~~~~
    # CORS is a protocol that allows web applications to make requests from the browser
    # across different domains.
    # NOTE: You MUST apply the CORS configuration before the CSRF filter, as CSRF has
    # dependencies on CORS settings.
    cors {
      # The path prefixes to filter.
      pathPrefixes = ["*"]
      # The allowed origins. If null, all origins are allowed.
      allowedOrigins = null
      # The allowed HTTP methods. If null, all methods are allowed
      allowedHttpMethods = null
      # The allowed HTTP headers. If null, all headers are allowed.
      allowedHttpHeaders = null
      # The exposed headers
      exposedHeaders = []
      # Whether to support credentials
      supportsCredentials = true
      # The maximum amount of time the CORS meta data should be cached by the client
      preflightMaxAge = 1 hour
    }
  }


  #play.http.filters = "global.Filters"

  #play.filters.cors {
   # allowedOrigins = ["http://", "*"]
    #allowedHttpMethods = ["GET", "POST"]
    #allowedHttpHeaders = ["Accept"]
  #}

  application {
    loader = "infrastructure.module.ApplicationLoader"
  }

}

# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

slick.dbs {
  foxhound {
    driver = "slick.driver.MySQLDriver$"
    db = {
      dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
      properties = {
        driver = "com.mysql.jdbc.Driver"
        url = "jdbc:mysql://localhost/foxhound"
        user = "guest"
        password = "guest123"
      }
    }
  }

  default {
    driver = "slick.driver.H2Driver$"
    db {
      driver = "org.h2.Driver"
      url = "jdbc:h2:mem:play;MODE=MYSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;DATABASE_TO_UPPER=FALSE;INIT=runscript from 'conf/statistic/h2-script.sql';"
    }
  }
}


play.cache.bindCaches = [ "db-cache", "foxhound-cache" ]

play.cache.redis {
  source: standalone
  instances {
    play {
      host: localhost
      port: 6379
    }
    foxhound-redis {
      source: cluster
      cluster: [
        { host: localhost, port: 6380 }
      ]
    }
  }
}


